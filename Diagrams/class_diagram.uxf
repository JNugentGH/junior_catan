<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>770</x>
      <y>270</y>
      <w>380</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Player
--
Name: String
Hand: HandClass
Score: Integer
--
Roll(): int
Build(Structure)
Trade(need: Resource, give: Resource, amounts: int)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>440</x>
      <y>480</y>
      <w>230</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>Tile
--
resource: ResouceClass
value: int
nodes: arraylist Points
links
--
produce(): this.resource
set_player()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>350</x>
      <y>230</y>
      <w>290</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>BoardClass
--
winner: PlayerClass
turn_queue: &lt;Queue&gt; PlayerClass
market: MarketClass
current_player: PlayerClass
--
ProduceResources()
SelectNextPlayer()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>390</x>
      <y>30</y>
      <w>180</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>/StructureClass/
--
location: TileClass
owner: PlayerClass
cost: &lt;Deck&gt; Resource
--
build()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>700</x>
      <y>0</y>
      <w>160</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>PriateLairClass
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>700</x>
      <y>80</y>
      <w>160</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>ShipClass
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>560</x>
      <y>20</y>
      <w>160</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;70.0;40.0;70.0;10.0;140.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>560</x>
      <y>50</y>
      <w>160</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0;70.0;60.0;140.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>630</x>
      <y>290</y>
      <w>160</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m1=1
m2=3..4</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1300</x>
      <y>310</y>
      <w>210</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Hand
--
&lt;Deck&gt; resources
&lt;Deck&gt; coc_tiles: CocoTiles
--
add_resource()
remove()
trade()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1320</x>
      <y>490</y>
      <w>190</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
Deck
-
cards: &lt;ArrayList&gt; Card
-
add(card)
remove(card)
shuffle()
sort()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1400</x>
      <y>420</y>
      <w>40</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m1= 1
m2= 2
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1140</x>
      <y>310</y>
      <w>180</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m1=1
m2=2</panel_attributes>
    <additional_attributes>10.0;10.0;160.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>290</y>
      <w>250</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Market
-
resources: &lt;list&gt;[5] Resources
-
fill()
clear()
refresh()
give()
receive()
show_resources()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>240</x>
      <y>280</y>
      <w>130</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m1=1
m2=1
</panel_attributes>
    <additional_attributes>110.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>90</x>
      <y>500</y>
      <w>100</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>/Resource/
-
type
-
build_with()
give()
receive()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLInterface</id>
    <coordinates>
      <x>2280</x>
      <y>350</y>
      <w>80</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Interface
--
Operation1
Operation2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>740</x>
      <y>590</y>
      <w>150</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>/CocoTile/
-

-
action()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>310</x>
      <y>680</y>
      <w>310</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Each tile should have a list of observing 
players for each lair of player put on
the node of the tile.
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
