<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>672</x>
      <y>272</y>
      <w>304</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>Player
--
Name: String
Hand: HandClass
Score: Integer
--
Roll(): int
Build(Structure)
Trade(need: Resource, give: Resource, amounts: int)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>408</x>
      <y>440</y>
      <w>184</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>Tile
--
resource: ResouceClass
value: int
nodes: arraylist Points
links
--
produce(): this.resource
set_player()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>336</x>
      <y>240</y>
      <w>232</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>BoardClass
--
winner: PlayerClass
turn_queue: &lt;Queue&gt; PlayerClass
market: MarketClass
current_player: PlayerClass
--
ProduceResources()
SelectNextPlayer()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>368</x>
      <y>80</y>
      <w>144</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>/StructureClass/
--
location: TileClass
owner: PlayerClass
cost: &lt;Deck&gt; Resource
--
build()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>616</x>
      <y>56</y>
      <w>128</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>PriateLairClass
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>616</x>
      <y>120</y>
      <w>128</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>ShipClass
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>504</x>
      <y>72</y>
      <w>128</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;70.0;40.0;70.0;10.0;140.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>504</x>
      <y>96</y>
      <w>128</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0;70.0;60.0;140.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>560</x>
      <y>288</y>
      <w>128</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m1=1
m2=3..4</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1096</x>
      <y>304</y>
      <w>168</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>Hand
--
&lt;Deck&gt; resources
&lt;Deck&gt; coc_tiles: CocoTiles
--
add_resource()
remove()
trade()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1112</x>
      <y>448</y>
      <w>152</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
Deck
-
cards: &lt;ArrayList&gt; Card
-
add(card)
remove(card)
shuffle()
sort()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1176</x>
      <y>392</y>
      <w>32</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m1= 1
m2= 2
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>968</x>
      <y>304</y>
      <w>144</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m1=1
m2=2</panel_attributes>
    <additional_attributes>10.0;10.0;160.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>56</x>
      <y>288</y>
      <w>200</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>Market
-
resources: &lt;list&gt;[5] Resources
-
fill()
clear()
refresh()
give()
receive()
show_resources()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>248</x>
      <y>280</y>
      <w>104</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m1=1
m2=1
</panel_attributes>
    <additional_attributes>110.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>128</x>
      <y>456</y>
      <w>80</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>/Resource/
-
type
-
build_with()
give()
receive()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLInterface</id>
    <coordinates>
      <x>1880</x>
      <y>336</y>
      <w>64</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Interface
--
Operation1
Operation2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>648</x>
      <y>528</y>
      <w>120</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>/CocoTile/
-

-
action()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>304</x>
      <y>600</y>
      <w>248</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Each tile should have a list of observing 
players for each lair of player put on
the node of the tile.
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
